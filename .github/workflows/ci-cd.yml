name: PrestaShop CI/CD Pipeline

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - production

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push images
        uses: docker/bake-action@v3
        with:
          push: true
          files: |
            docker-compose.yml
          targets: |
            prestashop
            nginx
            prometheus
            alertmanager
            backup

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    environment:
      name: ${{ github.event.inputs.environment || 'staging' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Set environment variables
        run: |
          if [[ "${{ github.event.inputs.environment }}" == "production" ]]; then
            echo "DEPLOY_HOST=${{ secrets.PROD_HOST }}" >> $GITHUB_ENV
            echo "DEPLOY_USER=${{ secrets.PROD_USER }}" >> $GITHUB_ENV
            echo "DEPLOY_PATH=${{ secrets.PROD_PATH }}" >> $GITHUB_ENV
          else
            echo "DEPLOY_HOST=${{ secrets.STAGING_HOST }}" >> $GITHUB_ENV
            echo "DEPLOY_USER=${{ secrets.STAGING_USER }}" >> $GITHUB_ENV
            echo "DEPLOY_PATH=${{ secrets.STAGING_PATH }}" >> $GITHUB_ENV
          fi

      - name: Deploy to server
        run: |
          envsubst < .env.template > .env
          scp -r docker-compose.yml .env prestashop nginx prometheus alertmanager grafana backup $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH
          ssh $DEPLOY_USER@$DEPLOY_HOST "cd $DEPLOY_PATH && docker-compose pull && docker-compose up -d"

      - name: Verify deployment
        run: |
          ssh $DEPLOY_USER@$DEPLOY_HOST "cd $DEPLOY_PATH && docker-compose ps"

  test:
    needs: deploy
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Test HTTP to HTTPS redirection
        run: |
          DEPLOY_URL="${{ secrets.DEPLOY_URL }}"
          STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://${DEPLOY_URL})
          if [[ $STATUS_CODE -eq 301 ]] || [[ $STATUS_CODE -eq 302 ]]; then
            echo "HTTP to HTTPS redirection works correctly"
          else
            echo "HTTP to HTTPS redirection failed with status code: $STATUS_CODE"
            exit 1
          fi

      - name: Test HTTPS access
        run: |
          DEPLOY_URL="${{ secrets.DEPLOY_URL }}"
          STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" -k https://${DEPLOY_URL})
          if [[ $STATUS_CODE -eq 200 ]]; then
            echo "HTTPS access works correctly"
          else
            echo "HTTPS access failed with status code: $STATUS_CODE"
            exit 1
          fi
